_______________________________________________________________________________________________________________________

1) Почему использование тестовых заглушек может быть полезным при написании модульных тестов?

1) Использование тестовых заглушек может быть полезным при написании модульных тестов, потому что они позволяют
изолировать код, который тестируется, от внешних зависимостей. Это делает тесты более предсказуемыми, стабильными
и быстрыми.
_______________________________________________________________________________________________________________________

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными
аргументами?

2) Для проверки, что метод был вызван с определенными аргументами, следует использовать заглушку типа "шпион" (spy).
Эта заглушка записывает информацию о вызовах метода, включая переданные аргументы, что позволяет затем проверить их.
_______________________________________________________________________________________________________________________

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение
в ответ на вызов метода?

3) Если просто нужно вернуть определенное значение или исключение в ответ на вызов метода, следует использовать
заглушку типа "подставщик" (stub). Эта заглушка предоставляет фиксированное значение или исключение при вызове метода.
_______________________________________________________________________________________________________________________

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных?

4) Для имитации взаимодействия с внешним API или базой данных следует использовать заглушку типа "подделка" (mock).
Эта заглушка позволяет задать ожидания по поводу вызовов методов и их аргументов, а затем проверить, что эти ожидания
были выполнены.
_______________________________________________________________________________________________________________________